# main.yml Under role_configure_cuda
# This role checks for the correct version of cuda and removes if not matching desired version
# role then installs correct version of cuda

# if desrired end state of Cuda 12.4 is false, assert any other cuda installations are purged
- name: Remove any existing CUDA versions if CUDA 12.4 is not present
  block:
    - name: Check if CUDA Toolkit 12.4 is installed
      shell: dpkg -l | grep cuda-toolkit-12-4
      register: cuda_12_4_installed
      failed_when: cuda_12_4_installed.rc != 0
      ignore_errors: true
      changed_when: false
      
    - name: Purge existing CUDA installations
      apt:
        name: cuda*
        state: absent
        purge: yes
      when: cuda_12_4_installed.failed
  become: yes

# Installation block for CUDA 12.4 Toolkit, ensuring the system has the required version
- name: Install CUDA 12.4 Toolkit
  block:
    # Download the CUDA keyring to authenticate the CUDA repository
    - name: Download CUDA Keyring
      get_url:
        url: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.1-1_all.deb
        dest: "/tmp/cuda-keyring_1.1-1_all.deb"

    # Install the downloaded CUDA keyring package
    - name: Install CUDA Keyring
      apt:
        deb: "/tmp/cuda-keyring_1.1-1_all.deb"

    # Update the APT package cache to recognize new repositories
    - name: Update APT repository cache
      apt:
        update_cache: yes

    # Install the specified version of the CUDA Toolkit
    - name: Install CUDA Toolkit 12.4
      apt:
        name: cuda-toolkit-12-4
        state: present

    # Add cuda to PATH to allow cuda commands to be called
    - name: Ensure CUDA bin directory is in PATH
      lineinfile:
        path: /etc/environment
        state: present
        backrefs: yes
        regexp: '^(PATH=")(.*)"$'
        line: '\1\2:/usr/local/cuda-12.4/bin'
  become: yes